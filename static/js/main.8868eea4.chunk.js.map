{"version":3,"sources":["components/ContactForm.module.css","components/ContactForm.js","components/Filter.js","components/ContactList.js","App.js","reportWebVitals.js","index.js","components/ContactList.module.css","components/Filter.module.css"],"names":["module","exports","ContactForm","valueName","valueNumber","handleChangeInfo","addContact","onSubmit","className","styles","form","label","type","name","pattern","title","required","value","onInput","input","button","Filter","onChange","filter","ContactList","friends","onDeleteContact","contactList","map","id","number","list","onClick","App","useState","JSON","parse","window","localStorage","getItem","infantСontacts","contacts","setContacts","setName","setNumber","setFilter","useEffect","setItem","stringify","e","target","preventDefault","find","item","alert","contact","shortid","generate","prevState","obj","toLowerCase","includes","trim","filterContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8868eea4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Qhli\",\"label\":\"ContactForm_label__DOj2V\",\"input\":\"ContactForm_input__VgZeX\",\"button\":\"ContactForm_button__1UFtC\"};","import React from \"react\";\nimport styles from \"./ContactForm.module.css\";\n\nconst ContactForm = ({\n  valueName,\n  valueNumber,\n  handleChangeInfo,\n  addContact,\n  \n}) => {\n  return (\n  <>\n    <form onSubmit={addContact} className={styles.form}>\n      <label className={styles.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={valueName}\n          onInput={handleChangeInfo}\n          className={styles.input}\n        />\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={valueNumber}\n            onInput={handleChangeInfo}\n            className={styles.input}\n          />\n        </label>\n      </label>\n\n      <button type=\"submit\" className={styles.button}>\n        Add contact\n      </button>\n    </form>\n  </>\n );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport styles from \"./Filter.module.css\";\nconst Filter = ({ value, onChange }) => (\n  <div className={styles.filter}>\n    <h3>Find contacts by name</h3>\n    <input value={value} onChange={onChange} className={styles.input} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ friends, onDeleteContact }) => (\n  <ul className={styles.contactList}>\n    {friends.map(({ id, name, number }) => (\n      <li key={id} className={styles.list}>\n        <p>\n          {name}:{number}\n        </p>\n        <button\n          className={styles.button}\n          type=\"button\"\n          onClick={onDeleteContact}\n          id={id}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import React, { useState, useEffect} from \"react\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport shortid from \"shortid\";\nimport infantСontacts from \"./components/contacts.json\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? infantСontacts\n  });\n  \n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleChangeInfo = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    if (contacts.find((item) => item.name === name)) {\n      alert(` ${name} is already in contacts!`);\n      setName(\"\");\n      setNumber(\"\");\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts((prevState) => [contact, ...prevState]);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  function filterContacts(contacts, filter) {\n    return contacts.filter(obj => {\n      return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\n    });\n  };\n\n  const deleteContacts = (e) => {\n    setContacts(contacts.filter((contact) => contact.id !== e.target.id));\n  };\n\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          valueName={name}\n          valueNumber={number}\n          handleChangeInfo={handleChangeInfo}\n          addContact={addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          friends={filterContacts(contacts, filter)}\n          onDeleteContact={deleteContacts}\n        />\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2rPy5\",\"list\":\"ContactList_list__2FFLK\",\"button\":\"ContactList_button__3iDcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2AQ0O\",\"input\":\"Filter_input__y7U8H\"};"],"sourceRoot":""}